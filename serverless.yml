org: lonedev
app: languvi-client
service: languvi-client
frameworkVersion: "3"

plugins:
  - serverless-bundle

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    USER_POOL_ID: { Ref: UserPool }
    CLIENT_ID: { Ref: UserClient }
    CLIENT_TABLE: ${self:service}-clientTable-${sls:stage}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    REGION: ${self:custom.region}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:AdminInitiateAuth
            - cognito-idp:AdminCreateUser
            - cognito-idp:AdminSetUserPassword
            - cognito-idp:AdminUpdateUserAttributes
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - sqs:SendMessage
          Resource:
            - ${self:custom.clientTableArn}
            - ${self:custom.userPoolArn}
            - ${self:custom.MailQueue.arn}
  httpApi:
    authorizers:
      cAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: ${self:custom.cognitoIssuerUrl.Value}
        audience: 
          - !Ref UserClient

resources:
  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: languvi-client-auth-pool
        Schema:
          - Name: email
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy:
            MinimumLength: 8
        AutoVerifiedAttributes:
          - email

    UserClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: languvi-client-pool
        GenerateSecret: false
        UserPoolId: !Ref UserPool
        AccessTokenValidity: 5
        IdTokenValidity: 5
        ExplicitAuthFlows:
          - 'ADMIN_NO_SRP_AUTH'
  
    ClientTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: ${self:service}-clientTable-${sls:stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName : email
            AttributeType: S
        KeySchema: 
          - AttributeName: email
            KeyType: HASH


functions:
  signup:
    handler: src/authentication/signup.handler
    events:
      - httpApi:
          path: /signup
          method: POST

  login:
    handler: src/authentication/signin.handler
    events:
      - httpApi:
          path: /signin
          method: POST

  getToken:
    handler: src/authentication/generateToken.handler
    events:
      - httpApi:
          path: /auth_token
          method: POST

  confirmEmail:
    handler: src/authentication/confirmEmail.handler
    events:
      - httpApi:
          path: /auth_email
          method: POST
  
  clientAcc:
    handler: src/client/getprofile.handler
    events:
      - httpApi:
          path: /profile
          method: GET
          authorizer:
            name: cAuthorizer
            
          

custom:
  clientTableArn: !GetAtt ClientTable.Arn
  userPoolArn: !GetAtt UserPool.Arn
  region: us-east-1
  cognitoIssuerUrl: 
    Value: !Join
      - ''
      - - 'https://cognito-idp.'
        - !Ref 'AWS::Region'
        - '.amazonaws.com/'
        - !Ref UserPool

  MailQueue:
    arn: !ImportValue MailQueue-${sls:stage}-Arn
    url: !ImportValue MailQueue-${sls:stage}-Url
  bundle:
    linting: false